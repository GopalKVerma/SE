<!DOCTYPE html>
<!--[if IE 8]><html class="ie ie8"> <![endif]-->
<!--[if IE 9]><html class="ie ie9"> <![endif]-->
<!--[if gt IE 9]><!-->	<html> <!--<![endif]-->
<head>


<!-- Basic -->
<meta charset="utf-8">
<title>Software Design Strategies</title>
<meta name="description" content="Software Engineering Overview - Learn Software Engineering Concepts in simple and easy steps starting from their overview and then covering  software analysis, software requirements, software design and its complexities, interface design, software design strategies, software development life cycle, software implementation, project management, software testing  and maintenance etc." />
<meta name="keywords" content="Software, Engineering, Tutorials,  Conccepts, simple,  easy,  steps, overview, software, analysis, requirements, design , complexities, interface,strategies, development, life, cycle, implementation, project management, testing, maintenance" />
<link rel="shortcut icon" href="/favicon.ico" type="image/x-icon" />
<meta name="author" content="tutorialspoint.com">
<meta name="viewport" content="width=device-width,initial-scale=1.0,user-scalable=yes">
<!-- Libs CSS -->
<link rel="stylesheet" href="/scripts/css/bootstrap.css">
<link rel="stylesheet" href="/scripts/css/fonts/font-awesome/css/font-awesome.css">
<!-- Theme CSS -->
<link rel="stylesheet" href="/scripts/css/theme.css">
<link rel="stylesheet" href="/scripts/css/theme-elements.css">
<!-- Current Page Styles -->
<link rel="stylesheet" href="/scripts/vendor/rs-plugin/css/settings.css" media="screen">
<!-- Skin CSS -->
<link rel="stylesheet" href="/scripts/css/skins/green.css"/>
<!-- Responsive CSS -->
<link rel="stylesheet" href="/scripts/css/theme-responsive.css" />
<!-- Head Libs -->
<script src="/scripts/vendor/modernizr.js"></script>
<!--[if IE]>
<link rel="stylesheet" href="/scripts/css/ie.css">
<![endif]-->
<!--[if lte IE 8]>
<script src="/scripts/vendor/respond.js"></script>
<![endif]-->
<!-- Front Page related changes -->
<link rel="stylesheet" href="/scripts/css/custom.css"/>
<style>
header nav ul.nav-main ul.dropdown-menu, 
nav.mega-menu .mega-menu-signin .dropdown-menu li,
li.heading, footer div.footer-ribon, div.footer-copyright, 
header nav ul.nav-main li.dropdown:hover a {
   background-color: #779a3b !important;
}
footer ul.list li{
   background: none !important;
   padding: 0px;
}
footer i.icon, footer ul.list.icons li i {
   color: #779a3b !important;
}
</style>
</head>
<body>
<div class="body">
<header>
<div class="container">
<h1 class="logo">
<a href="index.htm">
<img alt="tutorialspoint" src="/app/images/logo.png">
</a>
</h1>
<div class="search">
<form method="get" id="searchform" name="searchform" action="http://www.google.com/search" target="_blank">
<input type="hidden" name="sitesearch" value="www.tutorialspoint.com"/>
<div class="input-group">
<input type="text" class="form-control search" name="q" id="q" placeholder="Search your tutorials..." onfocus="if (this.value == 'Search your tutorials...') {this.value = '';}" onblur="if (this.value == '') {this.value = 'Search your tutorials...';}">
<input value="FORID:11" name="cof" type="hidden"/>
<input type="hidden" name="ie" value="ISO-8859-1" />
<span class="input-group-btn">
<button class="btn btn-default" type="submit"><i class="icon icon-search"></i></button>
</span>
</div>
</form>
</div>

<button class="btn btn-responsive-nav btn-inverse" data-toggle="collapse" data-target=".nav-main-collapse">
<i class="icon icon-bars"></i>
</button>
</div>
<div class="navbar-collapse nav-main-collapse collapse">
<div class="container">
<nav class="nav-main mega-menu">
<ul class="nav nav-pills nav-main" id="mainMenu">
   <li class="dropdown">
   <a class="dropdown" href="/index.htm">
   Home
   <i class="icon icon-home"></i>
   </a>
   </li>   
   
</ul>
</nav>
</div>
</div>
</header>
<div role="main" class="main">
<div class="container">
<div class="row">
<div class="col-md-3">
<aside class="sidebar">
<div class="mini-logo">
<img src="images/se-mini-logo.png" alt="QTP Tutorial" />
</div>
<ul class="nav nav-list primary left-menu">
<li class="heading">Software Engineering Tutorial</li>
<li><a  href="/app/index.htm">Software Engineering Home</a></li>
<li><a  href="/app/software_engineering_overview.htm">Software Engineering Overview</a></li>
<li><a  href="/app/software_development_life_cycle.htm">Software Development Life Cycle</a></li>
<li><a  href="/app/software_project_management.htm">Software Project Management</a></li>
<li><a  href="/app/software_requirements.htm">Software Requirements</a></li>
<li><a  href="/app/software_design_basics.htm">Software Design Basics</a></li>
<li><a  href="/app/software_analysis_design_tools.htm">Analysis &amp; Design Tools</a></li>
<li><a  href="/app/software_design_strategies.htm">Software Design Strategies</a></li>
<li><a  href="/app/software_user_interface_design.htm">Software User Interface Design</a></li>
<li><a  href="/app/software_design_complexity.htm">Software Design Complexity</a></li>
<li><a  href="/app/software_implementation.htm">Software Implementation</a></li>
<li><a  href="/app/software_testing_overview.htm">Software Testing Overview</a></li>
<li><a  href="/app/software_maintenance_overview.htm">Software Maintenance</a></li>
<li><a  href="/app/case_tools_overview.htm">CASE Tools Overview</a></li>
</ul>
<ul class="nav nav-list primary left-menu special">
<li class="heading">S/W Engineering Resources</li>
<li><a  href="/app/software_engineering_interview_questions.htm">SE - Interview Questions</a></li>
<li><a  href="/app/software_engineering_useful_resources.htm">SE - Useful Resources</a></li>
<li><a  href="/app/software_engineering_quick_guide.htm">SE - Quick Guide</a></li>
</ul>
</ul>
</aside>
</div>
<!-- PRINTING STARTS HERE -->
<div class="row">
<div class="content">
<div class="col-md-7 middle-col">
<h1>Software Design Strategies</h1>
<hr>
<div class="pre-btn">
<a href="/app/software_analysis_design_tools.htm"><i class="icon icon-arrow-circle-o-left big-font"></i> Previous Page</a>
</div>
<div class="nxt-btn">
<a href="/app/software_user_interface_design.htm">Next Page <i class="icon icon-arrow-circle-o-right big-font"></i>&nbsp;</a>
</div>
<div class="clearer"></div>

<hr>

<p>Software design is a process to conceptualize the software requirements into software implementation. Software design takes the user requirements as challenges and tries to find optimum solution. While the software is being conceptualized, a plan is chalked out to find the best possible design for implementing the intended solution.  </p>

<p>There are multiple variants of software design. Let us study them briefly -</p>
<h2>Structured Design</h2>
<p>Structured design is a conceptualization of problem into several well-organized elements of solution.  It is basically concerned with the solution design.  Benefit of structured design is, it gives better understanding of how the problem is being solved.  Structured design also makes it simpler for designer to concentrate on the problem more accurately. </p>

<p>Structured design is mostly based on 'divide and conquer' strategy where a problem is broken into several small problems and each small problem is individually solved until the whole problem is solved.</p>
<p>The small pieces of problem are solved by means of solution modules.  Structured design emphasis that these modules be well organized in order to achieve precise solution.  </p>

<p>These modules are arranged in hierarchy. They communicate with each other. A good structured design always follows some rules for communication among multiple modules, namely -</p>

<p><b>Cohesion</b>: grouping of all functionally related elements.</p>

<p><b>Coupling</b>: communication between different modules.</p>
<p>A good structured design has high cohesion and low coupling arrangements.</p>
<h2>Function Oriented Design</h2>
<p>In function-oriented design, the system is comprised of many smaller sub-systems known as functions.  These functions are capable of performing significant task in the system. The system is considered as top view of all functions.</p>
<p>Function oriented design inherits some properties of structured design where divide and conquer methodology is used.</p>

<p>This design mechanism divides the whole system into smaller functions, which provides means of abstraction by concealing the information and their operation.. These functional modules can share information among themselves by means of information passing and using information available globally.</p>

<p>Another characteristic of functions is that when a program calls a function, the function changes the state of the program, which sometimes is not acceptable by other modules. Function oriented design works well where the system state does not matter and program/functions work on input rather than on a state.</p>

<p>Design Process</p>
<ul class="list">
<li>The whole system is seen as how data flows in the system by means of data flow diagram.</li>
<li>DFD depicts  how functions changes data and state of entire system.</li>
<li>The entire system is logically broken down into smaller units known as functions on the basis of their operation in the system.</li>
<li>Each function is then described at large.</li>
</ul>
<h2>Object Oriented Design</h2>
<p>Object oriented design works around the entities and their characteristics instead of functions involved in the software system.  This design strategies focuses on entities and its characteristics.  The whole concept of software solution revolves around the engaged entities.</p>

<p>Let us see the important concepts of Object Oriented Design -</p>
<h3>Objects</h3>
<p>All entities involved in the solution design are known as objects.  For example, person, banks, company and customers are treated as objects.  Every entity has some attributes associated to it and has some methods to perform on the attributes.</p>
<h3>Classes</h3>
<p>A class is a generalized description of an object.  An object is an instance of a class.  Class defines all the attributes, which an object can have and methods, which defines the functionality of the object.</p>
<p>In the solution design, attributes are stored as variables and functionalities are defined by means of methods or procedures.</p>
<h3>Encapsulation</h3>
<p>In OOD, the attributes (data variables) and methods (operation on the data) are bundled together is called encapsulation. Encapsulation not only bundles important information of an object together, but also restricts access of the data and methods from the outside world. This is called information hiding.</p>
<h3>Inheritance</h3>
<p>OOD allows similar classes to stack up in hierarchical manner where the lower or sub-classes can import, implement and re-use allowed variables and methods from their immediate super classes. This property of OOD is known  as inheritance.  This makes it easier to define specific class and to create generalized classes from specific ones.</p>
<h3>Polymorphism</h3>
<p>OOD languages provide a mechanism where methods performing similar tasks but vary in arguments, can be assigned same name. This is called polymorphism, which allows a single interface performing tasks for different types.  Depending upon how the function is invoked, respective portion of the code gets executed. </p>
<h4>Example</h4>
<p>Let us assume two different objects, a string and an integer.</p>
<p>If method 'add' is invoked with string object, it concatenates the string. If it is invoked by passing integer argument, it mathematically sums up all integer values passed.</p>
<h2>Design Process</h2>
<p>Software design process can be perceived as series of well-defined steps.  Though it varies according to design approach (function oriented or object oriented, yet It may have the following steps involved:</p>
<ul class="list">
<li>A solution design is created from requirement or previous used system and/or system sequence diagram.</li>
<li>Objects are identified and grouped into classes on behalf of similarity in attribute characteristics.</li>
<li>Class hierarchy and relation among them is defined.</li>
<li>Application framework is defined.</li>
</ul>
<p>Here are two generic approaches for software designing -</p>
<h2>Top Down design</h2>
<p>We know that a system is composed of more than one sub-systems and it contains a number of components.  Further, these sub-systems and components may have their on set of sub-system and components and creates hierarchical structure in the system.</p>

<p>Top-down design takes the whole software system as one entity and then decomposes it to achieve more than one sub-system or component based on some characteristics.  Each sub-system or component is then treated as a system and decomposed further.  This process keeps on running until the lowest level of system in the top-down hierarchy is achieved.</p>

<p>Top-down design starts with a generalized model of system and keeps on defining the more specific part of it.  When all components are composed the whole system comes into existence.</p>

<p>Top-down design is more suitable when the software solution needs to be designed from scratch and specific details are unknown.</p>
<h2>Bottom-up design</h2>
<p>The bottom up design model starts with most specific and basic components.  It proceeds with composing higher level of components by using basic or lower level components. It keeps creating higher level components until the desired system is not evolved as one single component.  With each higher level, the amount of abstraction is increased.</p>

<p>Bottom-up strategy is more suitable when a system  needs to be created from some existing system, where the basic primitives can be used in the newer system.</p>

<p>Both, top-down and bottom-up approaches are not practical individually. Instead, a good combination of both is used.</p>
<hr>
<div class="pre-btn">
<a href="/app/software_analysis_design_tools.htm"><i class="icon icon-arrow-circle-o-left big-font"></i> Previous Page</a>
</div>

<div class="nxt-btn">
<a href="/app/software_user_interface_design.htm">Next Page <i class="icon icon-arrow-circle-o-right big-font"></i>&nbsp;</a>
</div>
<hr>
<!-- PRINTING ENDS HERE -->
</div>
</div>
<div class="row">
<div class="col-md-2">
<div class="translate">
<div id="translation_widget" style="word-spacing:3px;background-color:transparent;position:relative;top:-7px;"></div>			
</div>
<!-- AddThis Button BEGIN -->

<!-- AddThis Button END -->
</div>
</div>
</div>
</div>
</div>
<div class="footer-copyright">
<p>&copy; Copyright 2014. All Rights Reserved.</p>
</div>
</footer>
</div>
<!-- Libs -->
<script src="/scripts/vendor/jquery.js"></script>
<script src="/scripts/js/plugins.js"></script>
<script src="/scripts/vendor/bootstrap.js"></script>
<script src="/scripts/vendor/twitterjs/twitter.js"></script>
<script src="/scripts/vendor/jquery.validate.js"></script>
<!-- Current Page Scripts -->
<script src="/scripts/js/views/view.home.js"></script>
<!-- Theme Initializer -->
<script src="/scripts/js/theme.js"></script>
<!-- Custom JS -->
<script src="/scripts/js/custom.js"></script>
</div>
</body>
</html>
